{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGe,SAASA,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cACnC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAOlB,SACE,uBACAO,KAAK,OACLC,MAAOT,EACPU,SApBsB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YAwB3BZ,EAAYe,UAAY,CAEpBd,cAAgBe,IAAUC,KAAKC,Y,mCCjCtBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAEyBC,UAAUH,GAFnC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVlB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAOf,EAAKgB,IAAON,IACxB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEzB,ECJ2B,SAACA,GAC3B,MAA0BlB,mBAAS,CACjCyB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDXuBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAKlB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEdnBgB,EAAe,WAG1B,MAAoC7C,mBAAS,CAAC,sBAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAEA,OACE,qCACE,8CACA,cAACD,EAAD,CAAaC,cAAeA,IAC5B,uBAEA,6BACG+C,EAAWnB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCVxB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8bf1edc5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport default function AddCategory({setCategories}) {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if(inputValue.trim().length >2){\n        setCategories(cat => [inputValue, ...cat]);\n        setInputValue('');\n    }\n    \n\n  };\n\n  return (\n    <form onSubmit= {handleSubmit}>\n      <input \n      type=\"text\" \n      value={inputValue} \n      onChange={handleInputChange} />\n    </form>\n  );\n}\n\nAddCategory.prototype = {\n\n    setCategories : PropTypes.func.isRequired\n\n}","export const getGifs = async (category) => {\n    const url =\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=wuK7MUJ0Z5IDj10CsJWQMf3JnxW6Oaco`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images.downsized_medium.url,\n      };\n    });\n\n    return gifs;\n  };","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n\n   \n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src = {url} alt = {title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n\n const {data:images,loading} =  useFetchGifs(category);\n\n\n  \n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setstate({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n  \n\n  const [categories, setCategories] = useState([\"Dragon Ball Super\"]);\n  \n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}